/*
 * Foxhole WarAPI
 *
 * The War API allows developers to query information about the state of the current Foxhole World Conquest.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MapItem {
    #[serde(rename = "teamId", skip_serializing_if = "Option::is_none")]
    pub team_id: Option<models::FactionEnum>,
    #[serde(rename = "iconType", skip_serializing_if = "Option::is_none")]
    pub icon_type: Option<i32>,
    #[serde(rename = "x", skip_serializing_if = "Option::is_none")]
    pub x: Option<f32>,
    #[serde(rename = "y", skip_serializing_if = "Option::is_none")]
    pub y: Option<f32>,
    #[serde(rename = "flags", skip_serializing_if = "Option::is_none")]
    pub flags: Option<i32>,
    #[serde(rename = "viewDirection", skip_serializing_if = "Option::is_none")]
    pub view_direction: Option<i32>,
}

impl MapItem {
    pub fn new() -> MapItem {
        MapItem {
            team_id: None,
            icon_type: None,
            x: None,
            y: None,
            flags: None,
            view_direction: None,
        }
    }
}

