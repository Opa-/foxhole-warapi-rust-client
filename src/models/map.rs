/*
 * Foxhole WarAPI
 *
 * The War API allows developers to query information about the state of the current Foxhole World Conquest.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Map {
    #[serde(rename = "regionId", skip_serializing_if = "Option::is_none")]
    pub region_id: Option<i32>,
    #[serde(rename = "scorchedVictoryTowns", skip_serializing_if = "Option::is_none")]
    pub scorched_victory_towns: Option<i32>,
    #[serde(rename = "mapItems", skip_serializing_if = "Option::is_none")]
    pub map_items: Option<Vec<models::MapItem>>,
    #[serde(rename = "mapItemsC", skip_serializing_if = "Option::is_none")]
    pub map_items_c: Option<Vec<models::MapItem>>,
    #[serde(rename = "mapItemsW", skip_serializing_if = "Option::is_none")]
    pub map_items_w: Option<Vec<models::MapItem>>,
    #[serde(rename = "mapTextItems", skip_serializing_if = "Option::is_none")]
    pub map_text_items: Option<Vec<models::MapTextItems>>,
    #[serde(rename = "lastUpdated", skip_serializing_if = "Option::is_none")]
    pub last_updated: Option<i32>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<i32>,
}

impl Map {
    pub fn new() -> Map {
        Map {
            region_id: None,
            scorched_victory_towns: None,
            map_items: None,
            map_items_c: None,
            map_items_w: None,
            map_text_items: None,
            last_updated: None,
            version: None,
        }
    }
}

