/*
 * Foxhole WarAPI
 *
 * The War API allows developers to query information about the state of the current Foxhole World Conquest.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServerConnectionInfo {
    #[serde(rename = "currentMap", skip_serializing_if = "Option::is_none")]
    pub current_map: Option<String>,
    #[serde(rename = "steamId", skip_serializing_if = "Option::is_none")]
    pub steam_id: Option<String>,
    #[serde(rename = "ipAddress", skip_serializing_if = "Option::is_none")]
    pub ip_address: Option<String>,
    #[serde(rename = "port", skip_serializing_if = "Option::is_none")]
    pub port: Option<i32>,
    #[serde(rename = "beaconPort", skip_serializing_if = "Option::is_none")]
    pub beacon_port: Option<i32>,
    #[serde(rename = "packedWarStatus", skip_serializing_if = "Option::is_none")]
    pub packed_war_status: Option<i64>,
    #[serde(rename = "packedServerState", skip_serializing_if = "Option::is_none")]
    pub packed_server_state: Option<i32>,
    #[serde(rename = "colonialQueueSize", skip_serializing_if = "Option::is_none")]
    pub colonial_queue_size: Option<i32>,
    #[serde(rename = "wardenQueueSize", skip_serializing_if = "Option::is_none")]
    pub warden_queue_size: Option<i32>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "serverType", skip_serializing_if = "Option::is_none")]
    pub server_type: Option<i32>,
    #[serde(rename = "mapId", skip_serializing_if = "Option::is_none")]
    pub map_id: Option<i32>,
    #[serde(rename = "openColonialSlots", skip_serializing_if = "Option::is_none")]
    pub open_colonial_slots: Option<i32>,
    #[serde(rename = "openWardenSlots", skip_serializing_if = "Option::is_none")]
    pub open_warden_slots: Option<i32>,
    #[serde(rename = "freeDiskSpaceInMb", skip_serializing_if = "Option::is_none")]
    pub free_disk_space_in_mb: Option<i64>,
    #[serde(rename = "totalDiskSpaceInMb", skip_serializing_if = "Option::is_none")]
    pub total_disk_space_in_mb: Option<i64>,
}

impl ServerConnectionInfo {
    pub fn new() -> ServerConnectionInfo {
        ServerConnectionInfo {
            current_map: None,
            steam_id: None,
            ip_address: None,
            port: None,
            beacon_port: None,
            packed_war_status: None,
            packed_server_state: None,
            colonial_queue_size: None,
            warden_queue_size: None,
            name: None,
            version: None,
            server_type: None,
            map_id: None,
            open_colonial_slots: None,
            open_warden_slots: None,
            free_disk_space_in_mb: None,
            total_disk_space_in_mb: None,
        }
    }
}

